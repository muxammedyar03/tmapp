// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:password123@localhost:5432/time_management_db"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  fullName  String?  @map("full_name")
  avatarUrl String?  @map("avatar_url")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  categories  Category[]
  timeEntries TimeEntry[]

  @@map("users")
}

model Category {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  name      String
  color     String   @default("#3B82F6")
  icon      String   @default("‚è∞")
  createdAt DateTime @default(now()) @map("created_at")

  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  timeEntries TimeEntry[]

  @@unique([userId, name])
  @@map("categories")
}

model TimeEntry {
  id          String    @id @default(uuid())
  userId      String    @map("user_id")
  categoryId  String?   @map("category_id")
  title       String
  description String?
  startTime   DateTime  @map("start_time")
  endTime     DateTime? @map("end_time")
  duration    Int?      // in seconds
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  @@map("time_entries")
}
